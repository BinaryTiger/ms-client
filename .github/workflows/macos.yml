name: MacOS

on:
  push:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    branches: [master, dev, dev/**, refactor]
  pull_request:
    paths-ignore:
    - 'docs/**'
    - '**.md'
    branches: [master, dev, dev/**, refactor]
    
env:
  BUILD_TYPE: Release
  INSTALL_LOCATION: ${{github.workspace}}/.local

jobs:
  build:
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v2
    - name: Checkout submodules
      run: git submodule update --init --recursive
      
    - name: Cache dependencies
      uses: actions/cache@v2
      id: cache
      with:
        path: ${{env.INSTALL_LOCATION}}
        key: ${{runner.os}}-dependencies

    - name: Install ninja-build tool
      uses: seanmiddleditch/gha-setup-ninja@v1
        
    - name: Install Bass
      run: |
        cd thirdparty
        git clone https://github.com/filoper/bass24.git
        cp -R bass24/bass24-osx .

    - name: Install Glad
      run: |
        cd thirdparty/glad
        cmake -Bbuild -GNinja -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build build --config $BUILD_TYPE
        cmake --install build --config $BUILD_TYPE

    - name: Install lz4
      run: brew install lz4

    - name: Install Nx library
      run: |
        cd thirdparty/NoLifeNx/nlnx
        cmake -Bbuild -GNinja -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION -DCMAKE_BUILD_TYPE=$BUILD_TYPE
        cmake --build build --config $BUILD_TYPE
        cmake --install build --config $BUILD_TYPE

    - name: Install Glfw
      run: brew install glfw

    - name: Install GoogleTest
      run: |
        cd thirdparty
        git clone https://github.com/google/googletest.git --branch release-1.10.0
        cd googletest
        cmake -Bbuild -GNinja -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION
        cmake --build build --config $BUILD_TYPE
        cmake --build build --target install --config $BUILD_TYPE

    - name: Configure
      run: cmake -Bbuild -GNinja -DCMAKE_PREFIX_PATH=$INSTALL_LOCATION -DCMAKE_INSTALL_PREFIX=$INSTALL_LOCATION -DENABLE_CODE_COVERAGE=1 -DBOOST_ROOT=$BOOST_ROOT_1_72_0
    
    - name: Build
      run: cmake --build build --config $BUILD_TYPE

    - name: Run tests
      run: |
        cd build
        ctest -C $BUILD_TYPE -VV

    - name: Code coverage using Codecov
      if: runner.os == 'Linux'
      run: bash <(curl -s https://codecov.io/bash) 
